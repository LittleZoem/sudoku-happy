import { settings } from './settings';
import { writable, get } from 'svelte/store';

// export const usedHints = writable(0);

function createHints() {
	// let defaultHints = Infinity;
	let maxHints = 9;

	// const hints = writable(Infinity);
	const hintsLevel = writable(0);


	settings.subscribe(($settings) => {
		if ($settings.hintsLevelLimited) {
			maxHints = $settings.maxHintsLevel;
			hintsLevel.update($hintsLevel => {
				if ($hintsLevel > $settings.maxHintsLevel) return $settings.maxhintsLevel;

				return $hintsLevel;
			})
		} else {
			maxHints = 9;
			hintsLevel.set(0);
		}
	});

	return {
		subscribe: hintsLevel.subscribe,

		// useHint() {
		// 	hints.update($hints => {
		// 		if ($hints > 0) {
		// 			usedHints.update($usedHints => $usedHints + 1);
		// 			return $hints - 1;
		// 		}

		// 		return 0;
		// 	});
		// },

		toggle() {
			hintsLevel.update($hintsLevel => ($hintsLevel + 1) % (maxHints + 1))
			// console.log(get(hintsLevel));
		},

		reset() {
			// hints.set(defaultHints);
			// usedHints.set(0);
			hintsLevel.set(0);
		}
	};
}

export const hints = createHints();
