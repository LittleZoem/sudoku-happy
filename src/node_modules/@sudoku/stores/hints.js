import { settings } from './settings';
import { writable } from 'svelte/store';

function createStrategyTrack () {
	const strategyTrack = writable('');

	return {
		subscribe: strategyTrack.subscribe,

		set (str) {
			strategyTrack.update($strategyTrack => {
				$strategyTrack = str;
				return $strategyTrack;
			});
		},

		clear () {
			strategyTrack.update($strategyTrack => {
				$strategyTrack = '';
				return $strategyTrack;
			});
		}
	}
}

export const strategyTrack = createStrategyTrack();

function createHints() {

	let maxHints = 9;

	const hintsLevel = writable(0);

	settings.subscribe(($settings) => {
		if ($settings.hintsLevelLimited) {
			maxHints = $settings.maxHintsLevel;
			hintsLevel.update($hintsLevel => {
				if ($hintsLevel > $settings.maxHintsLevel) return $settings.maxhintsLevel;

				return $hintsLevel;
			})
		} else {
			maxHints = 9;
			hintsLevel.set(0);
		}
	});

	return {
		subscribe: hintsLevel.subscribe,


		toggle() {
			hintsLevel.update($hintsLevel => ($hintsLevel + 1) % (maxHints + 1))
		},

		reset() {
			hintsLevel.set(0);
		}
	};
}

export const hints = createHints();
