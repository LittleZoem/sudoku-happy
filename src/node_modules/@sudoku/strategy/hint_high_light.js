import { derived, writable, get } from 'svelte/store';


function createHintHighLight() {

    const hintHighLight = writable({});

    return {
        subscribe: hintHighLight.subscribe,

        set (cells) {
			hintHighLight.update($hintHighLight => {
                for (let i = 0; i < cells.length; i++) {
                    if (!$hintHighLight.hasOwnProperty(cells[i].x + ',' + cells[i].y)) {
                        $hintHighLight[cells[i].x + ',' + cells[i].y] = 1;
                    }
                }
				return $hintHighLight;
			});
        },

        add (x, y) {
			hintHighLight.update($hintHighLight => {
                if (!$hintHighLight.hasOwnProperty(x + ',' + y)) {
                    $hintHighLight[x + ',' + y] = 1;
                }
				return $hintHighLight;
			});
        },

        clear () {

			hintHighLight.update($hintHighLight => {
				$hintHighLight = {};
				return $hintHighLight;
			});
        }
    }
}

export const hintHighLight = createHintHighLight();